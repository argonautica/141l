Idea

R1 = I
R2 = J



Set R9, R10 to 00 // already set
Set R11, R12 to 11
R15 = 64
R14 = 1


Loop I from 0 to 63
    Loop J from I + 1 to 63
        Read I into R3 and R4
        Read J into R5 and R6
        Calc MSB into R7 
        Calc LSB into R8

        If MSB > R9 then R9, 10 = 7, 8
        ELIF MSB = R9
            If LSB > 10
                10 = LSB
        If MSB < R11 then 11, 12 = 7, 8
        ELIF MSB = 11


// Initialization



ACC 0
AR 11
AR 12
ACC 1
AR 15 // SET 63
ACC 3
AR 14 // set incrmeent
ACC 3 // SET 2
ADD 2
ADD 2
ACC 2 // RESET




REWRITE



//OUTERLOOP
RA 1
CMP 15
BEQ DONE
BLT INNERLOOP

//INNERLOOP
RA 1
CMP 2
BEQ INCREMENTJ
BLT INCREMENTJ
RA 2
CMP 15
BEQ INCREMENTI
// MEMREAD (NOT A BRANCH)
LOAD 1
AR 3
ACC 3 // get 1
ADD 1 // add 1
LOAD 1
AR 4
LOAD 2
AR 5
ACC 3 // get 1
ADD 2 // add 1
LOAD 2
AR 6
// CALC (NOT A BRANCH)
RA 3 // read 3
XOR 5 // xor with 5
AR 7 // set to 7
RA 4 
XOR 6
AR 8
// CMP PART (NOT A BRANCH)
AR 7
CMP 9
BGT SET_MAX
AR 8
CMP 10
BGT SET_MAX
// CHECKMIN
AR 7
CMP 11
BLT SET_MIN
AR 8
CMP 12
BLT SET_MIN
//CONT_MIN
INCREMENTJ


// SET_MIN
AR 7
RA 11
AR 8
RA 12
BCH CONT_MIN

// SET_MAX
AR 7
RA 9
AR 8
RA 10
BCH CHECKMIN




//INCREMENTI
ACC 3 // get 1
ADD 1 // add one to I
BCH INNERLOOP

// INCREMENTJ
ACC 3
ADD 2
BCH INNERLOOP







OLD
 


// Loop
RA 1
CMP 15
BEQ DONE
BLT INNERLOOP
// INNERLOOP
CMP 2 // COMPARE I TO J
BEQ INCREMENT J // 
RA 2
CMP 15
BEQ INCREMENT I
// IF WE ARE HERE THEN MATH
LOAD


// INCREMENT I
AR 1
ADD 14
RA 1
RA 2
BCH INNERLOOP

// INCREMENT J
CMP 15
BEQ INCREMENT I
RA 2
ADD 14
RA 2
BCH INNERLOOP



