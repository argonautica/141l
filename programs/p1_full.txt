ACC 0 // GET 11111111
AR 10 // initialize cmax
ACC 2
AR 9 // initialize cmin
AR 1 // SET I to 0
ACC 1
AR 15 // SET BOUND
ACC 3
AR 14 // SETTING INCREMENTOR
ACC 2 // ZERO OUT
ADD 14
ADD 14 // SETTING J to 2
AR 2 // SET J
RA 1 // OUTERLOOP
CMP 15
BLT 3 // GO TO INNERLOOP
RA 1 // INNERLOOP
CMP 2
BEQ 4 // TO INCREMENTJ
RA 2 // read 2
CMP 15 // compare to bound
BGT 5 // GO TO INCREMENTI
LOAD 1 // start of loading
AR 3 // write to r3
RA 1 
ADD 14
AR 1
LOAD 1
AR 4
RA 1
SUB 14
AR 1
LOAD 2
AR 5
RA 2
ADD 14
AR 2
LOAD 2
AR 6 // CALC BELOW
RA 3 // get 3
XOR 5 // xor with 5
AR 3 // write out to 3
RA 4 // get 4
XOR 6 // xor with 6
AR 4 // write to 4
POPCNT 3 // get set bits of 3
AR 11 // write to 11
POPCNT 4 // get set bits of 4
ADD 11 // add set bits of 11 to 4
CMP 10 // SET MIN
BGT 6
AR 10
CMP 9 // GREATERTHAN POSITION
BLT 4
AR 9
RA 2 // INCREMENTJ POSITION
ADD 14
AR 2
BCH 3
RA 1 // INCREMENTI POSITION
ADD 14
ADD 14
AR 1
ADD 14
ADD 14
AR 2
CMP 15
BGT 2
BCH 3
ACC 4
AR 1
ACC 5
AR 2
RA 10
STORE 1
RA 9
STORE 2
ACC 1 // DONE POSITION










